trigger:
- main

pool:
  name: 'MyAgentPool'

variables:
- group: SSHKeys
- group: DockerHubCredentials
- group: GitHubToken

resources:
  repositories:
  - repository: terraform_azure
    type: github
    name: Lilithsudo/terraform_azure
    endpoint: Lilithsudo

jobs:
- job: Terraform
  steps:
  - checkout: self
  - checkout: terraform_azure
    persistCredentials: true

  - script: |
      echo "Vérifier si Terraform est installé"
      if ! command -v terraform &> /dev/null
      then
          echo "Terraform n'est pas installé. Installation en cours..."
          wget https://releases.hashicorp.com/terraform/1.0.0/terraform_1.0.0_linux_amd64.zip
          unzip terraform_1.0.0_linux_amd64.zip
          sudo mv terraform /usr/local/bin/
      else
          echo "Terraform est déjà installé."
      fi
      terraform version
    displayName: 'Installer Terraform'

  - script: |
      echo "Initialiser Terraform"
      terraform init
    workingDirectory: $(Build.SourcesDirectory)/terraform_azure
    displayName: 'Initialiser Terraform'

  - script: |
      echo "Planifier Terraform"
      terraform plan -out=tfplan
    workingDirectory: $(Build.SourcesDirectory)/terraform_azure
    displayName: 'Planifier Terraform'

  - script: |
      echo "Appliquer Terraform"
      terraform apply -auto-approve tfplan
    workingDirectory: $(Build.SourcesDirectory)/terraform_azure
    displayName: 'Appliquer Terraform'


- job: BuildAndDeploy
  
  
  steps:
  - script: |
      echo "Installation de Docker et Maven sur la machine distante..."
      ssh adminuser@20.111.48.176 << 'EOF'
      sudo apt-get update
      sudo apt-get install -y docker.io maven
      EOF
    displayName: 'Installer les dépendances sur la machine distante'

  - script: |
      echo "Clonage du projet et build des applications avec Maven..."
      ssh adminuser@20.111.48.176 << 'EOF'
      git clone https://github.com/Lilithsudo/omega.git
      cd omega/ihm-omega
      mvn clean package -DskipTests -Dmaven.compiler.source=11 -Dmaven.compiler.target=11
      cd ../ajouterOmega
      mvn clean package -DskipTests -Dmaven.compiler.source=11 -Dmaven.compiler.target=11
      cd ../consulterOmega
      mvn clean package -DskipTests -Dmaven.compiler.source=11 -Dmaven.compiler.target=11
      cd ../modifierOmega
      mvn clean package -DskipTests -Dmaven.compiler.source=11 -Dmaven.compiler.target=11
      cd ../supprimerOmega
      mvn clean package -DskipTests -Dmaven.compiler.source=11 -Dmaven.compiler.target=11
      EOF
    displayName: 'Build Maven pour chaque module'

  - script: |
      echo "Construction et déploiement des conteneurs Docker..."
      ssh adminuser@20.111.48.176 << 'EOF'
      cd omega/ihm-omega
      docker build -t lilithsudo/ihm-omega:latest .
      cd ../ajouterOmega
      docker build -t lilithsudo/ajouteromega:latest .
      cd ../consulterOmega
      docker build -t lilithsudo/consulteromega:latest .
      cd ../modifierOmega
      docker build -t lilithsudo/modifieromega:latest .
      cd ../supprimerOmega
      docker build -t lilithsudo/supprimeromega:latest .
      EOF
    displayName: 'Construction des images Docker pour chaque module'

  - script: |
      echo "Push des images Docker vers Docker Hub..."
      ssh adminuser@20.111.48.176 << 'EOF'
      echo "$(DOCKERHUB_PASSWORD)" | docker login -u "$(DOCKERHUB_USERNAME)" --password-stdin
      docker push lilithsudo/ihm-omega:latest
      docker push lilithsudo/ajouteromega:latest
      docker push lilithsudo/consulteromega:latest
      docker push lilithsudo/modifieromega:latest
      docker push lilithsudo/supprimeromega:latest
      docker logout
      EOF
    displayName: 'Push des images Docker'
